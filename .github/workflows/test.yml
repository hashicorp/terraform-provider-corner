name: Tests
on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'website/*'
      - 'tools/*'
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'website/*'
      - 'tools/*'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version-file: 'go.mod'
      id: go

    - name: Run linters
      uses: golangci/golangci-lint-action@3cfe3a4abbb849e10058ce4af15d205b6da42804 # v4.0.0
      with:
        version: latest

    - name: Go fmt
      run: |
        make fmt

    - name: Go vet
      run: |
        make vet

    - name: Build
      run: |
        go build -v .

  tfprotov5:
    name: Protocol Version 5 (${{ matrix.os}}, Terraform ${{ matrix.terraform}})
    needs: build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        terraform: ${{ fromJSON(vars.TF_VERSIONS_PROTOCOL_V5) }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: 'go.mod'
      - uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0
        with:
          # TODO: Temporary change has been made to `vars.TF_VERSIONS_PROTOCOL_V5` to include the `.*` to enable us
          # to utilize the v1.8.0-rc1 version of Terraform. This should be reverted once Terraform v1.8.0 is released.
          # terraform_version: ${{ matrix.terraform }}.*
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - run: go test -v -cover ./internal/framework5provider/
      - run: go test -v -cover ./internal/protocolprovider/
      - run: go test -v -cover ./internal/sdkv2provider/
        env:
          TF_ACC: "1"
      - run: go test -v -cover ./internal/sdkv2testingprovider/
        env:
          TF_ACC: "1"
      - run: go test -v -cover ./internal/tf5muxprovider/
      - run: go test -v -cover ./internal/tf6to5provider/

  tfprotov6:
    name: Protocol Version 6 (${{ matrix.os}}, Terraform ${{ matrix.terraform}})
    needs: build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        terraform: ${{ fromJSON(vars.TF_VERSIONS_PROTOCOL_V6) }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: 'go.mod'
      - uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0
        with:
          # TODO: Temporary change has been made to `vars.TF_VERSIONS_PROTOCOL_V6` to include the `.*` to enable us
          # to utilize the v1.8.0-rc1 version of Terraform. This should be reverted once Terraform v1.8.0 is released.
          # terraform_version: ${{ matrix.terraform }}.*
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - run: go test -v -cover ./internal/framework6provider/
      - run: go test -v -cover ./internal/protocolv6provider/
      - # Terraform CLI 1.1.5+ is required for upgrading sdk/v2
        if: matrix.terraform != '1.0.*'
        run: go test -v -cover ./internal/tf5to6provider/
      - run: go test -v -cover ./internal/tf6muxprovider/
